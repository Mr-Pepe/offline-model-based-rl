[tox]
envlist = py39-{lint, test}
isolated_build = True


[testenv:py39-lint]
description = Run static checkers.
extras = lint
setenv =
    # https://github.com/openwall/john/issues/4765
    OMPI_MCA_opal_warn_on_missing_libcuda=0
    # https://github.com/openwall/john/issues/5088
    HWLOC_HIDE_ERRORS=2
commands =
    # Check import ordering
    isort . --check
    # Check formatting
    black . --check
    # Lint source code
    pylint . {posargs}
    # Check typing
    ; mypy .
    # Check docstrings
    ; pydocstyle .
    ; pylint --load-plugins pylint.extensions.docparams src {posargs}


[testenv:py39-test]
description = Run tests.
extras = test
commands =
    coverage erase
    pytest -m "not slow" {posargs}


[testenv:docs]
description = Test and build the docs.
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/build
    BUILD = html
extras = doc
commands =
    # Delete all files generated by sphinx-apidoc
    python -c 'import glob, os; [os.remove(f) for f in glob.glob("docs/offline_mbrl*")];'
    python -c 'import os; os.remove("docs/modules.rst") if os.path.exists("docs/modules.rst") else None;'
    # Run doctests
    sphinx-build -b doctest -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}
    # Autogenerate docs from code
    sphinx-apidoc -f -o docs/ src/offline_mbrl
    # Prevent warning that modules.rst is unused
    python -c 'import os; os.remove("docs/modules.rst") if os.path.exists("docs/modules.rst") else None;'
    # Build the docs
    sphinx-build -b html -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}
